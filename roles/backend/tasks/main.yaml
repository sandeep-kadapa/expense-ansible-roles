- name: disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs & mysql
  ansible.builtin.dnf:
    name:
      - nodejs
      - mysql
    state: latest

- name: create expense user
  ansible.builtin.user: 
    name: expense
    state: present

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: donwload backend code
  get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip backend code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip  # by default checks in ansible server
    dest: /app 
    remote_src: yes

- name: install npm dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install python mysql dependencies
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9  # pip3.11 if python version is 3.11

- name: import data into mysql
  community.mysql.mysql_db:
    login_user: "{{login_user}}"
    login_password: "{{login_password}}"
    login_host: "{{login_host}}"
    target: /app/schema/backend.sql
    state: import
    name: all

- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Unmask the backend service unit file
  ansible.builtin.systemd:
    name: backend.service
    state: unmasked
    
- name: start and enable backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes